[{"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/index.js":"1","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/reportWebVitals.js":"2","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/App.js":"3","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/Routes.js":"4","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Home.js":"5","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/NotFound.js":"6","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/config.js":"7","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Login.js":"8","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/contextLib.js":"9","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/LoaderButton.js":"10","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/errorLib.js":"11","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/hooksLib.js":"12","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Signup.js":"13","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/NewNote.js":"14","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/awsLib.js":"15","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Notes.js":"16","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Settings.js":"17","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/BillingForm.js":"18","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/AuthenticatedRoute.js":"19","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/UnauthenticatedRoute.js":"20"},{"size":1201,"mtime":1606781019151,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1606776753147,"results":"23","hashOfConfig":"22"},{"size":2326,"mtime":1606890005765,"results":"24","hashOfConfig":"22"},{"size":1242,"mtime":1606935610954,"results":"25","hashOfConfig":"22"},{"size":2312,"mtime":1606867923045,"results":"26","hashOfConfig":"22"},{"size":199,"mtime":1606780389204,"results":"27","hashOfConfig":"22"},{"size":617,"mtime":1606890139426,"results":"28","hashOfConfig":"22"},{"size":1683,"mtime":1606935335283,"results":"29","hashOfConfig":"22"},{"size":167,"mtime":1606781926851,"results":"30","hashOfConfig":"22"},{"size":486,"mtime":1606843219021,"results":"31","hashOfConfig":"22"},{"size":188,"mtime":1606843436282,"results":"32","hashOfConfig":"22"},{"size":328,"mtime":1606843678576,"results":"33","hashOfConfig":"22"},{"size":3790,"mtime":1606865228881,"results":"34","hashOfConfig":"22"},{"size":2207,"mtime":1606887282402,"results":"35","hashOfConfig":"22"},{"size":240,"mtime":1606865764216,"results":"36","hashOfConfig":"22"},{"size":3653,"mtime":1606888663493,"results":"37","hashOfConfig":"22"},{"size":1415,"mtime":1606892272608,"results":"38","hashOfConfig":"22"},{"size":2179,"mtime":1606892011876,"results":"39","hashOfConfig":"22"},{"size":508,"mtime":1606935913715,"results":"40","hashOfConfig":"22"},{"size":844,"mtime":1606935375208,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4eiqbw",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/index.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/reportWebVitals.js",[],["85","86"],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/App.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/Routes.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Home.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/NotFound.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/config.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Login.js",["87"],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/contextLib.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/LoaderButton.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/errorLib.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/hooksLib.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Signup.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/NewNote.js",["88"],"import React, { createContext, useRef, useState } from 'react';\nimport {API} from \"aws-amplify\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from 'react-router-dom';\nimport LoaderButton from '../components/LoaderButton';\nimport { onError } from '../libs/errorLib';\nimport config from '../config';\nimport './NewNote.css';\n\nexport default function NewNote() {\n  //const { fields } = useForm();\n  /*\n   * useRef doesn't cause component to re-render.\n   * it only stores the value so we can use it later\n   * set/get \"current\" value by referencing file.current\n   */\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileChange = (e) => (file.current = e.target.files[0]);\n\n  const validateForm = () => content.length > 0;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `File must be smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n        const attachment = file.current ? await s3Upload(file.current) : null;\n        await createNote({content, attachment});\n        history.push('/');\n    } catch(e) {\n        onError(e);\n        setIsLoading(false);\n    }\n  };\n\n  const createNote = (content) => API.post(\"notes\", \"/notes\", {body: content});\n\n  return (\n    <div className=\"NewNote\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"content\">\n          <Form.Control\n            value={content}\n            as=\"textarea\"\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"file\">\n          <Form.Label>Attachment</Form.Label>\n          <Form.Control onChange={handleFileChange} type=\"file\" />\n        </Form.Group>\n\n        <LoaderButton\n          block\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm}>Post</LoaderButton>\n      </Form>\n    </div>\n  );\n}\n","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/libs/awsLib.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Notes.js",["89"],"import React, { useRef, useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { API, Storage } from 'aws-amplify';\nimport { onError } from '../libs/errorLib';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport config from '../config';\nimport { s3Upload } from '../libs/awsLib';\n\nexport default () => {\n  const file = useRef(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const loadNote = async () => API.get('notes', `/notes/${id}`);\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          /* Get signed URL for S3 object */\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n  const validateForm = () => content.length > 0;\n\n  const formatFilename = (str) => str.replace(/^w+-/, '');\n\n  const handleFileChange = (e) => (file.current = e.target.files[0]);\n\n  const handleSubmit = async (e) => {\n    let attachment;\n    e.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `File must be smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n      await saveNote({\n        content,\n        attachment: attachment || note.attachment,\n      });\n\n      history.push('/');\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (e) => {\n    e.preventDefault();\n\n    if (!window.confirm('Are you sure?')) return;\n\n    setIsDeleting(true);\n\n    try {\n      await deleteNote();\n      history.push('/');\n    } catch (e) {\n      onError(e);\n      setIsDeleting(false);\n    }\n  };\n\n  const saveNote = (note) => API.put('notes', `/notes/${id}`, { body: note });\n\n  const deleteNote = () => API.del('notes', `/notes/${id}`);\n\n  return (\n    <div className=\"Notes\">\n      {note && (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"content\">\n            <Form.Control\n              as=\"textarea\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"file\">\n            <Form.Label>Attachment</Form.Label>\n            {note.attachment && (\n              <p>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={note.attachmentURL}>\n                  {formatFilename(note.attachment)}\n                </a>\n              </p>\n            )}\n            <Form.Control onChange={handleFileChange} type=\"file\" />\n          </Form.Group>\n\n          <LoaderButton\n            block\n            size=\"lg\"\n            type=\"submit\"\n            isLoading={isLoading}\n            disabled={!validateForm}>\n            Save\n          </LoaderButton>\n\n          <LoaderButton\n            block\n            size=\"lg\"\n            variant=\"danger\"\n            onClick={handleDelete}\n            isLoading={isDeleting}>\n            Delete\n          </LoaderButton>\n        </Form>\n      )}\n    </div>\n  );\n};\n","/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/containers/Settings.js",["90"],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/BillingForm.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/AuthenticatedRoute.js",[],"/Users/brandonbuster/Desktop/serverless-notes-api/notes-app-client/src/components/UnauthenticatedRoute.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":10,"column":1,"nodeType":"102","endLine":145,"endColumn":3},{"ruleId":"95","severity":1,"message":"103","line":11,"column":9,"nodeType":"97","messageId":"98","endLine":11,"endColumn":16},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'createContext' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]